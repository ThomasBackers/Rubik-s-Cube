{"version":3,"sources":["js/main.js"],"names":["bordersColor","coveredSidesClr","sidesColor1","sidesColor2","sidesColor3","sidesColor4","sidesColor5","sidesColor6","cubesWidth","cubesHeight","cubesDepth","bordersWidth","transformCoeff","sidesRotationAngle","rubiksCube","document","querySelector","cubes","children","cubesSides","cube","sidesArray","side","push","forEach","cubeSides","i","className","includes","style","backgroundColor","Cube","HTMLElement","sides","coordinates","color1","color2","color3","color4","color5","color6","color7","color8","border","transform","console","log"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"../src","sourcesContent":["// Palette\nlet bordersColor = \"#000\",\n    coveredSidesClr = \"#000\",\n    sidesColor1 = \"#495867\",\n    sidesColor2 = \"#577399\",\n    sidesColor3 = \"#BDD5EA\",\n    sidesColor4 = \"#F7F7FF\",\n    sidesColor5 = \"#FE5F55\",\n    sidesColor6 = \"#BC170F\",\n// Sizing\n    cubesWidth = 60, //px\n    cubesHeight = 60, //px\n    cubesDepth = 60, //px\n    bordersWidth = 4, //px\n// Positioning\n    transformCoeff = -0.5,\n    sidesRotationAngle = 90 //deg\n\n// get the Rubik's cube HTML element\nconst rubiksCube = document.querySelector(\".rubik-s-cube\")\n// store all the cubes inside it into a const\nconst cubes = rubiksCube.children\n// create a list which will contain all cubes as arrays of sides\n// instead of simple HTML elements\nconst cubesSides = []\n// for each cube\nfor (let cube of cubes) {\n    // create an array to store its sides\n    const sidesArray = []\n    // loop through each side\n    // and push each side inside the sides array\n    for (let side of cube.children) sidesArray.push(side)\n    // then we push this sides array inside the cubesSides array\n    cubesSides.push(sidesArray)\n}\n// now cubeSides contains 27 arrays\n// each array represents a cube and contains\n// the all 6 sides of that cube in the following order:\n// front, back, right, left, top and bottom\n// ------------------------------------------------------------\n// cubes are encountered in the following order in cubesSides:\n//   Z    Y    X\n// front top right,    middle top right,    back top right,\n// front top center,   middle top center,   back top center,\n// front top left,     middle top left,     back top left,\n// front center right, middle center right, back center right,\n// etc.\n// ---- BEWARE: orientations are valid depending on the current Rubik's cube CSS orientation only ----\n\n// for each cube (represented by its sides array) in cubesSides \ncubesSides.forEach(cubeSides => {\n    // we want to loop through the sides\n    // but we'll need the index so:\n    for (let i = 0; i < 6; i++)\n        // if the current side does NOT include \"covered\"\n        if (!cubeSides[i].className.includes(\"covered\"))\n            switch(i) {\n                // depending on the side orientation,\n                // give it a particular backgroundColor\n                case 0:\n                    cubeSides[i].style.backgroundColor = sidesColor1\n                    break\n                case 1:\n                    cubeSides[i].style.backgroundColor = sidesColor2\n                    break\n                case 2:\n                    cubeSides[i].style.backgroundColor = sidesColor3\n                    break\n                case 3:\n                    cubeSides[i].style.backgroundColor = sidesColor4\n                    break\n                case 4:\n                    cubeSides[i].style.backgroundColor = sidesColor5\n                    break\n                case 5:\n                    cubeSides[i].style.backgroundColor = sidesColor6\n                    break\n            }\n})\n\n\n\nclass Cube {\n    constructor(HTMLElement) {\n        this.HTMLElement = HTMLElement\n        this.sides = [...HTMLElement.children]\n        this.coordinates = [,,]\n    }\n    setSidesColor(\n        color1 = bordersColor,\n        color2 = sidesColor1,\n        color3 = sidesColor2,\n        color4 = sidesColor3,\n        color5 = sidesColor4,\n        color6 = sidesColor5,\n        color7 = sidesColor6,\n        color8 = coveredSidesClr\n    ) {\n        for (let i = 0; i < 6; i++) {\n            if (!this.sides[i].className.includes(\"covered\")) {\n                this.sides[i].style.border = `4px solid ${color1}`\n                switch(i) {\n                    case 0:\n                        this.sides[i].style.backgroundColor = color2\n                        break\n                    case 1:\n                        this.sides[i].style.backgroundColor = color3\n                        break\n                    case 2:\n                        this.sides[i].style.backgroundColor = color4\n                        break\n                    case 3:\n                        this.sides[i].style.backgroundColor = color5\n                        break\n                    case 4:\n                        this.sides[i].style.backgroundColor = color6\n                        break\n                    case 5:\n                        this.sides[i].style.backgroundColor = color7\n                        break\n                }\n            } else this.sides[i].style.backgroundColor = color8\n        }\n    }\n}\n\ncubes[0].style.transform = `translate3d(0, 0, -60px)`\nconsole.log(cubes[0].style.transform)\n"]}